local LrLogger = import 'LrLogger'
local logger = LrLogger( 'LIGHTTAB' )
logger:enable( "print" ) -- or "logfile"
logger:trace( 'Starting dev params')
local developmentParams = {}

developmentParams.params = {
 Temperature="Temperature",
 Tint="Tint",
 Exposure="Exposure",
 Highlights="Highlights",
 Shadows="Shadows",
 Brightness="Brightness",
 Contrast="Contrast",
 Whites="Whites",
 Blacks="Blacks",
 Clarity="Clarity",
 Vibrance="Vibrance",
 Saturation="Saturation",
 ParametricDarks="ParametricDarks",
 ParametricLights="ParametricLights",
 ParametricShadows="ParametricShadows",
 ParametricHighlights="ParametricHighlights",
 ParametricShadowSplit="ParametricShadowSplit",
 ParametricMidtoneSplit="ParametricMidtoneSplit",
 ParametricHighlightSplit="ParametricHighlightSplit",
 SaturationAdjustmentRed="SaturationAdjustmentRed",
 SaturationAdjustmentOrange="SaturationAdjustmentOrange",
 SaturationAdjustmentYellow="SaturationAdjustmentYellow",
 SaturationAdjustmentGreen="SaturationAdjustmentGreen",
 SaturationAdjustmentAqua="SaturationAdjustmentAqua",
 SaturationAdjustmentBlue="SaturationAdjustmentBlue",
 SaturationAdjustmentPurple="SaturationAdjustmentPurple",
 SaturationAdjustmentMagenta="SaturationAdjustmentMagenta",
 HueAdjustmentRed="HueAdjustmentRed",
 HueAdjustmentOrange="HueAdjustmentOrange",
 HueAdjustmentYellow="HueAdjustmentYellow",
 HueAdjustmentGreen="HueAdjustmentGreen",
 HueAdjustmentAqua="HueAdjustmentAqua",
 HueAdjustmentBlue="HueAdjustmentBlue",
 HueAdjustmentPurple="HueAdjustmentPurple",
 HueAdjustmentMagenta="HueAdjustmentMagenta",
 LuminanceAdjustmentRed="LuminanceAdjustmentRed",
 LuminanceAdjustmentOrange= "LuminanceAdjustmentOrange",
 LuminanceAdjustmentYellow="LuminanceAdjustmentYellow",
 LuminanceAdjustmentGreen="LuminanceAdjustmentGreen",
 LuminanceAdjustmentAqua="LuminanceAdjustmentAqua",
 LuminanceAdjustmentBlue="LuminanceAdjustmentBlue",
 LuminanceAdjustmentPurple="LuminanceAdjustmentPurple",
 LuminanceAdjustmentMagenta="LuminanceAdjustmentMagenta",
 GrayMixerRed="GrayMixerRed",
 GrayMixerOrange="GrayMixerOrange",
 GrayMixerYellow="GrayMixerYellow",
 GrayMixerGreen="GrayMixerGreen",
 GrayMixerAqua="GrayMixerAqua",
 GrayMixerBlue="GrayMixerBlue",
 GrayMixerPurple="GrayMixerPurple",
 GrayMixerMagenta="GrayMixerMagenta",
 SplitToningShadowHue="SplitToningShadowHue",
 SplitToningShadowSaturation="SplitToningShadowSaturation",
 SplitToningHighlightHue="SplitToningHighlightHue",
 SplitToningHighlightSaturation="SplitToningHighlightSaturation",
 SplitToningBalance="SplitToningBalance",
 Sharpness="Sharpness",
 SharpenRadius="SharpenRadius",
 SharpenDetail="SharpenDetail",
 SharpenEdgeMasking="SharpenEdgeMasking",
 LuminanceSmoothing="LuminanceSmoothing",
 LuminanceNoiseReductionDetail="LuminanceNoiseReductionDetail",
 LuminanceNoiseReductionContrast="LuminanceNoiseReductionContrast",
 ColorNoiseReduction="ColorNoiseReduction",
 ColorNoiseReductionDetail="ColorNoiseReductionDetail",
 ColorNoiseReductionSmoothness="ColorNoiseReductionSmoothness",
 Dehaze="Dehaze",
 PostCropVignetteAmount="PostCropVignetteAmount",
 PostCropVignetteMidpoint="PostCropVignetteMidpoint",
 PostCropVignetteFeather="PostCropVignetteFeather",
 PostCropVignetteRoundness="PostCropVignetteRoundness",
 PostCropVignetteStyle="PostCropVignetteStyle",
 PostCropVignetteHighlightContrast="PostCropVignetteHighlightContrast",
 GrainAmount="GrainAmount",
 GrainSize="GrainSize",
 GrainFrequency="GrainFrequency",
 LensProfileDistortionScale="LensProfileDistortionScale",
 LensProfileChromaticAberrationScale="LensProfileChromaticAberrationScale",
 LensProfileVignettingScale="LensProfileVignettingScale",
 LensManualDistortionAmount="LensManualDistortionAmount",
 DefringePurpleAmount="DefringePurpleAmount",
 DefringePurpleHueLo="DefringePurpleHueLo",
 DefringePurpleHueHi="DefringePurpleHueHi",
 DefringeGreenAmount="DefringeGreenAmount",
 DefringeGreenHueLo="DefringeGreenHueLo",
 DefringeGreenHueHi="DefringeGreenHueHi",
 PerspectiveVertical="PerspectiveVertical",
 PerspectiveHorizontal="PerspectiveHorizontal",
 PerspectiveRotate="PerspectiveRotate",
 PerspectiveScale="PerspectiveScale",
 PerspectiveAspect="PerspectiveAspect",
 PerspectiveUpright="PerspectiveUpright",
 ShadowTint="ShadowTint",
 RedHue="RedHue",
 RedSaturation="RedSaturation",
 GreenHue="GreenHue",
 GreenSaturation="GreenSaturation",
 BlueHue="BlueHue",
 BlueSaturation="BlueSaturation",
}

function developmentParams:isAvailableDevelopmentParam(param)
  if developmentParams.params[param] then
    return true
  else
    return false
  end
end

return developmentParams;